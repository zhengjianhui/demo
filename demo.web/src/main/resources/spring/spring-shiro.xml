<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="repository" class="demo.shiro.session.repository.RedisShiroSessionRepository" />
    <!-- 会话ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>
    <!-- sessionDao -->
    <bean id="sessionDAO" class="demo.shiro.session.dao.MySessionDao">
        <property name="shiroSessionRepository" ref="repository"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>
    <!-- 会话Cookie模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <!--cookie的name，我故意取名叫xxxxbaidu -->
        <constructor-arg value="v_v-s-baidu"/>
        <property name="httpOnly" value="true"/>
        <!--cookie的有效时间 -->
        <property name="maxAge" value="-1"/>
        <!-- 配置存储Session Cookie的domain为 一级域名
        <property name="domain" value=".itboy.net"/>
         -->
    </bean>
    <!-- 会话验证调度器 -->
    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
        <!-- 间隔多少时间检查，不配置是60分钟 -->
        <property name="interval" value="1800000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>
    <!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="1800000"/>
        <property name="sessionDAO" ref="sessionDAO"/>
        <!-- 间隔多少时间检查，不配置是60分钟 -->
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <!-- 是否开启 检测，默认开启 -->
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <!-- 是否删除无效的，默认也是开启 -->
        <property name="deleteInvalidSessions" value="true"/>
        <!-- 会话Cookie模板 -->
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
    </bean>

    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

    <!-- 自定义 Realm role  -->
    <bean id="customRealm" class="demo.shiro.realm.CustomRealm"/>
    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="customRealm"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>
    <!-- 自定义拦截器 -->
    <!--<bean id="login" class="demo.shiro.filter.LoginFilter"/>-->
    <!-- 基于Form表单的身份验证过滤器 -->
    <bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
        <property name="usernameParam" value="username"/>
        <property name="passwordParam" value="password"/>
        <property name="loginUrl" value="/rest/login"/>
        <property name="successUrl" value="/rest/userInfo"/>
    </bean>
    <bean id="role" class="demo.shiro.filter.RoleFilter"/>

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="filters">
            <map>
                <!-- 将自定义 的拦截器 注入shiroFilter中 -->
                <entry key="authc" value-ref="formAuthenticationFilter"/>
                <entry key="roles" value-ref="role" />
            </map>
        </property>

        <!--<property name="unauthorizedUrl" value="/?login"/>-->
        <property name="filterChainDefinitions">
            <value>
                <!-- 在URI 后指定使用的拦截器 -->
                /index.html = anon
                /rest/login = authc
                /** = roles, roles[user]
                <!--/page/register/* = anon-->
                <!--/page/index.jsp = authc-->
                <!--/page/addItem* = authc,roles[数据管理员]-->
                <!--/page/file* = authc,roleOR[普通用户,数据管理员]-->
                <!--/page/listItems* = authc,roleOR[数据管理员,普通用户]-->
                <!--/page/showItem* = authc,roleOR[数据管理员,普通用户]-->
                <!--/page/updateItem*=authc,roles[数据管理员]-->
            </value>
        </property>
    </bean>

</beans>